{
    "loginGetUser" : "select id from user where name = ? and password = password(?)",
    "getUserByToken" : "select user_id, u.entity_type, u.entity_id from user_login ul inner join user u on ul.user_id = u.id where token = ? and date_add(ul.date_created, INTERVAL ? DAY) >= now()",
    "getToken" : "call getToken(?,?)",
    "getTokenById" : "select token from pantax.user_login where id = ?",
    "getUserStatus" : "select status from user_status where user_id = ? and date_add(status_date, interval ? MINUTE) >= now()",
    "updateUserStatus" : "INSERT INTO pantax.user_status (user_id, status, status_date) VALUES( ?, 'live', now()) ON DUPLICATE KEY UPDATE status_date = now()",
    "getDoctorAppOptions" : "select ao.id, from_date, to_date from doctor d inner join appointment_option ao on d.id = ao.doctor_id where d.id = :doctorId and ao.from_date > now() and ao.id not in (select aao.appointment_option_id from appointment_appointment_option aao inner join appointment_option ao on ao.id = aao.appointment_option_id where ao.doctor_id = :doctorId )",
    "searchMainPart" : "select * from doctor d inner join doctor_category dc on d.id = dc.doctor_id where (:dynamic) limit ?, ?",
    "searchDynamicPart" : "concat(d.name, '', d.primary_care) like '%:term%'",
    "getDoctor" : "select name, degree, primary_care, rank from doctor where id = ?",
    "getPatient" : "select * from patient where id = ?",
    "getPatientAppointments" : "select ao.doctor_id, ao.from_date, ao.to_date, ap.id appointment_id, ao.id appointment_option_id from appointment ap inner join appointment_appointment_option aao on ap.id = aao.appointment_id inner join appointment_option ao on aao.appointment_option_id = ao.id  where ap.patient_id = ? and ao.from_date > now()",
    "appointmentInfo" : "select weight, height, blood_pressure, temperature, appointment_reason, additional_info from appointment where id = ?",
    "patientAppointmentHistory" : "select a.id appointment_id, ao.id appointment_option_id, ao.from_date date, d.name doctor_name, a.additional_info appointment_additional_info from appointment a inner join appointment_appointment_option aao on a.id = aao.appointment_id inner join appointment_option ao on aao.appointment_option_id = ao.id inner join doctor d on ao.doctor_id = d.id where a.patient_id = ? order by a.id limit ?,?",
    "patientPersonalInfo" : "select name, birthday, marital_status, occupation, address, picture_url  from patient where id = ?",
    "updatePatientInfo" : "update patient set :updateStatement where id = :id",
    "insertAppointment" : "INSERT INTO pantax.appointment :columns VALUES :values",
    "updateAppointment" : "UPDATE pantax.appointment set :updateStatement where id = :id",
    "deleteAppointmentAppointmentOptions" : "DELETE FROM  pantax.appointment_appointment_option WHERE appointment_id= :id",
    "insertAppointmentAppointmentOption" : "INSERT INTO pantax.appointment_appointment_option (appointment_id, appointment_option_id) VALUES(?, ?)",
    "getAppOptionsByApp" : "select * from appointment_option where id in (select appointment_option_id from appointment_appointment_option where appointment_id = ?)",
    "getPatientReviews" : "select * from reviews where patient_id = ?",
    "getPatientAppointments":"select app.id appointment_id, apo.doctor_id, apo.from_date, apo.to_date from appointment app inner join appointment_appointment_option apapo on app.id = apapo.appointment_id inner join appointment_option apo on apapo.appointment_option_id = apo.id where app.patient_id = ? and apo.from_date > now()",
    "getCategories" : "select * from category limit ?,?",
    "insertDocument" : "INSERT INTO pantax.document (name, subject, created_date, last_access_date, file_url) VALUES(?, ?, now(), now(), ?)"
}
